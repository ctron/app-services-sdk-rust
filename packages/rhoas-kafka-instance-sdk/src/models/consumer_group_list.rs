/*
 * Kafka Admin REST API
 *
 * An API to provide REST endpoints for query Kafka for admin operations
 *
 * The version of the OpenAPI document: 0.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

/// ConsumerGroupList : A list of consumer groups



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ConsumerGroupList {
    /// Consumer group list items
    #[serde(rename = "items", skip_serializing_if = "Option::is_none")]
    pub items: Option<Vec<crate::models::ConsumerGroup>>,
    /// The total number of consumer groups.
    #[serde(rename = "total", skip_serializing_if = "Option::is_none")]
    pub total: Option<f32>,
    /// The number of consumer groups per page.
    #[serde(rename = "size", skip_serializing_if = "Option::is_none")]
    pub size: Option<f32>,
    /// The page
    #[serde(rename = "page", skip_serializing_if = "Option::is_none")]
    pub page: Option<i32>,
    /// Offset of the topic list
    #[serde(rename = "offset", skip_serializing_if = "Option::is_none")]
    pub offset: Option<i32>,
    /// Maximum of returned topics
    #[serde(rename = "limit", skip_serializing_if = "Option::is_none")]
    pub limit: Option<i32>,
    /// The total number of consumer groups.
    #[serde(rename = "count", skip_serializing_if = "Option::is_none")]
    pub count: Option<f32>,
}

impl ConsumerGroupList {
    /// A list of consumer groups
    pub fn new() -> ConsumerGroupList {
        ConsumerGroupList {
            items: None,
            total: None,
            size: None,
            page: None,
            offset: None,
            limit: None,
            count: None,
        }
    }
}


