/*
 * Kafka Admin REST API
 *
 * An API to provide REST endpoints for query Kafka for admin operations
 *
 * The version of the OpenAPI document: 0.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

/// Partition : Kafka topic partition



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct Partition {
    /// The partition id, unique among partitions of the same topic
    #[serde(rename = "partition")]
    pub partition: i32,
    /// Unique id for the partition (deprecated, use `partition` instead)
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
    /// List of replicas for the partition
    #[serde(rename = "replicas", skip_serializing_if = "Option::is_none")]
    pub replicas: Option<Vec<serde_json::Value>>,
    /// List in-sync replicas for this partition.
    #[serde(rename = "isr", skip_serializing_if = "Option::is_none")]
    pub isr: Option<Vec<serde_json::Value>>,
    /// Kafka server / broker.
    #[serde(rename = "leader", skip_serializing_if = "Option::is_none")]
    pub leader: Option<serde_json::Value>,
}

impl Partition {
    /// Kafka topic partition
    pub fn new(partition: i32) -> Partition {
        Partition {
            partition,
            id: None,
            replicas: None,
            isr: None,
            leader: None,
        }
    }
}


