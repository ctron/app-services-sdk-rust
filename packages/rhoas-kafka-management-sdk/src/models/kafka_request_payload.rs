/*
 * Kafka Service Fleet Manager
 *
 * Kafka Service Fleet Manager is a Rest API to manage Kafka instances.
 *
 * The version of the OpenAPI document: 1.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

/// KafkaRequestPayload : Schema for the request body sent to /kafkas POST



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct KafkaRequestPayload {
    /// The cloud provider where the Kafka cluster will be created in
    #[serde(rename = "cloud_provider", skip_serializing_if = "Option::is_none")]
    pub cloud_provider: Option<String>,
    /// Set this to true to configure the Kafka cluster to be multiAZ
    #[serde(rename = "multi_az", skip_serializing_if = "Option::is_none")]
    pub multi_az: Option<bool>,
    /// The name of the Kafka cluster. It must consist of lower-case alphanumeric characters or '-', start with an alphabetic character, and end with an alphanumeric character, and can not be longer than 32 characters.
    #[serde(rename = "name")]
    pub name: String,
    /// The region where the Kafka cluster will be created in
    #[serde(rename = "region", skip_serializing_if = "Option::is_none")]
    pub region: Option<String>,
    /// Whether connection reauthentication is enabled or not. If set to true, connection reauthentication on the Kafka instance will be required every 5 minutes. The default value is true
    #[serde(rename = "reauthentication_enabled", skip_serializing_if = "Option::is_none")]
    pub reauthentication_enabled: Option<bool>,
}

impl KafkaRequestPayload {
    /// Schema for the request body sent to /kafkas POST
    pub fn new(name: String) -> KafkaRequestPayload {
        KafkaRequestPayload {
            cloud_provider: None,
            multi_az: None,
            name,
            region: None,
            reauthentication_enabled: None,
        }
    }
}


